@page "/"

<PageTitle>Home</PageTitle>

<h1 class="text-3xl font-bold">
    Data Access App
</h1>

<hr />

<h2 id="about-heading" class="text-2xl font-bold">
    About
</h2>

<p class="text-lg py-4">
    This is a simple data access app built with Blazor and .NET 8. The app
    demonstrates how to interact with a SQL Server database using Dapper.
    The app allows you to create, read, update, and delete people from the
    database. You can navigate to the create and read pages using the links
    on the left.
</p>

<p class="text-lg pb-4">
    By design, the app is simple and easy to understand. The app is not
    intended to be a full-featured application. Instead, the app is meant to
    be a starting point for learning how to interact with a database using
    Dapper. The app is also a good reference for building a simple CRUD
    application with Blazor.
</p>

<h2 id="technologies-heading" class="text-2xl font-bold">
    Technologies
</h2>

<p class="text-lg pt-4 pb-2">
    The app is built with the following technologies:
</p>

<ul class="pb-4 list-disc pl-8">
    <li>
        <a href="https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps/blazor" class="text-blue font-bold hover:underline">Blazor</a>
    </li>
    <li>
        <a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0" class="text-blue font-bold hover:underline">.NET 8</a>
    </li>
    <li>
        <a href="https://www.learndapper.com/" class="text-blue font-bold hover:underline">Dapper</a>
    </li>
    <li>
        <a href="https://www.microsoft.com/en-us/sql-server/sql-server-downloads" class="text-blue font-bold hover:underline">SQL Server</a>
    </li>
</ul>

<h2 id="create-heading" class="text-2xl font-bold">
    Create
</h2>

<p class="text-lg py-4">
    The create page allows you to add a new person to the database. You can
    enter the person's first name and last name and click the create button
    to add the person to the database.
</p>

<p class="text-lg pb-4">
    The create page is built using Blazor's
    <a
        href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.components.forms.editform?view=aspnetcore-8.0"
        class="text-blue font-bold hover:underline"
    >
        EditForm
    </a>
    component. The EditForm
    component is used to create a form that allows you to add a new person to
    the database. The form is validated on the client side using Blazor's
    built-in validation features.
</p>

<h2 id="read-heading" class="text-2xl font-bold">
    Read
</h2>

<p class="text-lg py-4">
    The read page displays all people in the database. You can click the edit
    button to update a person or the delete button to remove a person.
</p>

<p class="text-lg pb-4">
    The read page is built using Blazor's
    <a
        href="https://aspnet.github.io/quickgridsamples/"
        class="text-blue font-bold hover:underline"
    >
        QuickGrid
    </a>
    component. The ComponentBase class is used to create a component that displays
    all people in the database. The component uses Dapper to query the database
    and display the results in a table.
</p>

<h2 id="update-heading" class="text-2xl font-bold">
    Update
</h2>

<p class="text-lg py-4">
    The update page allows you to edit a person in the database. You can
    change the person's first name and last name and click the update button
    to save the changes.
</p>

<p class="text-lg pb-4">
    The update page is built using Blazor's
    <a
        href="https://learn.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.components.forms.editform?view=aspnetcore-8.0"
        class="text-blue font-bold hover:underline"
    >
        EditForm
    </a>
    component. The EditForm
    component is used to create a form that allows you to edit a person in the
    database. The form is validated on the client side using Blazor's built-in
    validation features.
</p>

<h2 id="delete-heading" class="text-2xl font-bold">
    Delete
</h2>

<p class="text-lg py-4">
    Unlike the CRU pages, the delete feature does not have a dedicated page.
    Instead, the delete feature is implemented on the read page. You can click
    the delete button to be prompted with a modal dialog asking if you want to
    delete the person. If you click the delete button in the modal dialog, the
    person will be removed from the database.
</p>