@page "/create-person"
@inject IPeopleData peopleData
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create Person</PageTitle>

<h1 class="text-3xl font-bold">
    create person
</h1>

<p class="text-lg py-4">
    The form below allows you to create a new person. Upon valid submission,
    the person will be added to the database. Additionally, you will be
    redirected to the read page.
</p>

<div class="flex flex-col">
    <EditForm Model="@person" method="POST" FormName="CreatePersonForm" OnValidSubmit="@CreatePerson" class="flex-1 flex flex-col items-center gap-4 shadow-md border rounded p-4 bg-darkgray">
        <h3 class="text-white font-bold">Create Person</h3>
        <DataAnnotationsValidator />

        <div class="form-group">
            <InputText id="FirstName" class="input" @bind-Value="person.FirstName" placeholder="First name" />
            <ValidationMessage For="@(() => person.FirstName)" class="error-text"/>
        </div>

        <div class="form-group">
            <InputText id="LastName" class="input" @bind-Value="person.LastName" placeholder="Last name" />
            <ValidationMessage For="@(() => person.LastName)" class="error-text" />
        </div>
        <button type="submit" class="btn btn-primary btn-base">Create</button>
    </EditForm>
</div>

@code {
    private PersonModel person = new PersonModel();
    private async Task CreatePerson()
    {
        await peopleData.InsertPerson(person);
        person = new PersonModel();
        NavigationManager.NavigateTo("/read-people");
    }
}