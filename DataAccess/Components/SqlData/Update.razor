@page "/update-person/{id:int}"
@inject IPeopleData peopleData
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<h3>Update Person</h3>

@if (person == null)
{
    <div class="flex items-center justify-center">
        <i class="fa-sharp fa-thin fa-loader fa-5x animate-spin"></i>
    </div>
}
else
{
    <EditForm Model="person" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText id="FirstName" class="form-control" @bind-Value="person.FirstName" />
        </div>

        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText id="LastName" class="form-control" @bind-Value="person.LastName" />
        </div>

        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
}

@code
{
    private PersonModel? person = new PersonModel();

    [Parameter]
    public int Id { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        person = null;
        person = await peopleData.GetPersonById(Id);
    }
    private async Task HandleValidSubmit()
    {
        await peopleData.UpdatePerson(person);
        navigationManager.NavigateTo("/read-people");
    }
}
